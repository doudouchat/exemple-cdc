<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>exemple</groupId>
		<artifactId>exemple-cdc</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>exemple-cdc-agent</artifactId>

	<properties>

		<!-- SONAR -->
		<sonar.coverage.jacoco.xmlReportPaths>${sonar.coverage.report.path}</sonar.coverage.jacoco.xmlReportPaths>

	</properties>

	<dependencyManagement>

		<dependencies>

			<!-- CUCUMBER -->

			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-bom</artifactId>
				<version>7.18.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>

		<!-- CORE -->
		<dependency>
			<groupId>exemple</groupId>
			<artifactId>exemple-cdc-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- CASSANDRA -->
		<dependency>
			<groupId>org.apache.cassandra</groupId>
			<artifactId>cassandra-all</artifactId>
		</dependency>

		<!-- TEST -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- CUCUMBER -->

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JUNIT PLATEFORM -->

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- CONTAINER -->

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>


	</dependencies>

	<build>

		<plugins>

			<!-- JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Premain-Class>com.exemple.cdc.agent.Agent</Premain-Class>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- SHADE PLUGIN -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Agent-Class>com.exemple.cdc.agent.Agent</Agent-Class>
										<Premain-Class>com.exemple.cdc.agent.Agent</Premain-Class>
									</manifestEntries>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>cdc</id>

			<build>

				<testResources>
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>

				<plugins>

					<!-- HELPER -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-resources</phase>
								<configuration>
									<portNames>
										<portName>cassandra.port</portName>
										<portName>zookeeper.port</portName>
										<portName>kafka.internal_port</portName>
										<portName>kafka.client_port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- JACOCO -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>dump-cassandra-1</id>
								<goals>
									<goal>dump</goal>
								</goals>
								<configuration>
									<address>127.0.0.1</address>
									<port>6300</port>
									<destFile>${project.build.directory}/jacoco-cassandra-1-it.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>dump-cassandra-2</id>
								<goals>
									<goal>dump</goal>
								</goals>
								<configuration>
									<address>127.0.0.1</address>
									<port>6301</port>
									<destFile>${project.build.directory}/jacoco-cassandra-2-it.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>merge</id>
								<phase>verify</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-it.exec</destFile>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*-it.exec</include>
												<include>jacoco-load-it/*</include>
											</includes>
										</fileSet>
									</fileSets>
								</configuration>
							</execution>
							<execution>
								<id>report-integration</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- COPY JACOCO JAR AGENT && LOAD AGENT-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jacoco</groupId>
									<artifactId>org.jacoco.agent</artifactId>
									<version>${jacoco.version}</version>
									<classifier>runtime</classifier>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
									<destFileName>jacocoagent.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>exemple</groupId>
									<artifactId>exemple-cdc-load</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
									<destFileName>exemple-cdc-load-agent.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</plugin>

					<!-- DOCKER -->
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start_zookeeper</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>zookeeper:3.9.2</name>
											<alias>zookeeper</alias>
											<run>
												<ports>
													<port>${zookeeper.port}:2181</port>
												</ports>
												<wait>
													<time>20000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_kafka</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>bitnami/kafka:3.7.1</name>
											<alias>kafka</alias>
											<run>
												<ports>
													<port>${kafka.client_port}:9092</port>
													<port>${kafka.internal_port}:9093</port>
												</ports>
												<env>
													<ALLOW_PLAINTEXT_LISTENER>yes</ALLOW_PLAINTEXT_LISTENER>
													<KAFKA_CFG_ZOOKEEPER_CONNECT>172.17.0.1:${zookeeper.port}</KAFKA_CFG_ZOOKEEPER_CONNECT>
													<KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT</KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>
													<KAFKA_CFG_LISTENERS>CLIENT://:9092,INTERNAL://:9093</KAFKA_CFG_LISTENERS>
													<KAFKA_CFG_ADVERTISED_LISTENERS>CLIENT://localhost:${kafka.client_port},INTERNAL://172.17.0.1:${kafka.internal_port}</KAFKA_CFG_ADVERTISED_LISTENERS>
													<KAFKA_CFG_INTER_BROKER_LISTENER_NAME>INTERNAL</KAFKA_CFG_INTER_BROKER_LISTENER_NAME>
													<KAFKA_ENABLE_KRAFT>no</KAFKA_ENABLE_KRAFT>
												</env>
												<wait>
													<time>10000</time>
												</wait>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_cassandra_1</id>
								<goals>
									<goal>start</goal>
									<goal>copy</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>cassandra:${cassandra.version}</name>
											<alias>cassandra</alias>
											<run>
												<ports>
													<port>${cassandra.port}:9042</port>
													<port>6300:6300</port>
												</ports>
												<env>
													<JVM_OPTS>-Dcassandra.skip_wait_for_gossip_to_settle=0 -Dcassandra.initial_token=0</JVM_OPTS>
													<JVM_EXTRA_OPTS>-javaagent:/tmp/lib/jacocoagent.jar=includes=com.exemple.cdc.*,output=tcpserver,address=*,classdumpdir=/tmp/agent/source -javaagent:/exemple-cdc-agent.jar=conf=/tmp/conf/exemple-cdc.yml</JVM_EXTRA_OPTS>
													<CASSANDRA_CLUSTER_NAME>cassandra-cluster-it</CASSANDRA_CLUSTER_NAME>
													<CASSANDRA_SEEDS>172.17.0.4</CASSANDRA_SEEDS>
												</env>
												<volumes>
													<bind>
														<volume>${project.build.directory}/${project.artifactId}-${project.version}.jar:/exemple-cdc-agent.jar</volume>
														<volume>${project.build.testOutputDirectory}/conf/cdc:/tmp/conf</volume>
														<volume>${project.build.testOutputDirectory}/conf/cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml</volume>
														<volume>${project.build.testOutputDirectory}/conf/cassandra/logback.xml:/etc/cassandra/logback.xml</volume>
														<volume>${project.build.directory}/lib:/tmp/lib</volume>
													</bind>
												</volumes>
												<wait>
													<log>(?s)Startup complete</log>
													<time>60000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
											<copy>
												<entries>
													<entry>
														<containerPath>/tmp/logs/archive</containerPath>
														<hostDirectory>${project.build.directory}/.logs/cassandra_1</hostDirectory>
													</entry>
													<entry>
														<containerPath>/tmp/agent/source/com</containerPath>
														<hostDirectory>${project.build.outputDirectory}</hostDirectory>
													</entry>
													<entry>
														<containerPath>/tmp/load/source/com</containerPath>
														<hostDirectory>${project.build.outputDirectory}</hostDirectory>
													</entry>
													<entry>
														<containerPath>/tmp/load/jacoco.exec</containerPath>
														<hostDirectory>${project.build.directory}/jacoco-load-it</hostDirectory>
													</entry>
												</entries>
											</copy>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_cassandra_2</id>
								<goals>
									<goal>start</goal>
									<goal>copy</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>cassandra:${cassandra.version}</name>
											<alias>cassandra</alias>
											<run>
												<ports>
													<port>6301:6300</port>
												</ports>
												<env>
													<JVM_OPTS>-Dcassandra.skip_wait_for_gossip_to_settle=0 -Dcassandra.initial_token=2</JVM_OPTS>
													<JVM_EXTRA_OPTS>-javaagent:/tmp/lib/jacocoagent.jar=includes=com.exemple.cdc.*,output=tcpserver,address=*,classdumpdir=/tmp/agent/source -javaagent:/exemple-cdc-agent.jar=conf=/tmp/conf/exemple-cdc.yml</JVM_EXTRA_OPTS>
													<CASSANDRA_CLUSTER_NAME>cassandra-cluster-it</CASSANDRA_CLUSTER_NAME>
													<CASSANDRA_SEEDS>172.17.0.4</CASSANDRA_SEEDS>
												</env>
												<volumes>
													<bind>
														<volume>${project.build.directory}/${project.artifactId}-${project.version}.jar:/exemple-cdc-agent.jar</volume>
														<volume>${project.build.testOutputDirectory}/conf/cdc:/tmp/conf</volume>
														<volume>${project.build.testOutputDirectory}/conf/cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml</volume>
														<volume>${project.build.testOutputDirectory}/conf/cassandra/logback.xml:/etc/cassandra/logback.xml</volume>
														<volume>${project.build.directory}/lib:/tmp/lib</volume>
													</bind>
												</volumes>
												<wait>
													<log>(?s)Startup complete</log>
													<time>90000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
											<copy>
												<entries>
													<entry>
														<containerPath>/tmp/logs/archive</containerPath>
														<hostDirectory>${project.build.directory}/.logs/cassandra_2</hostDirectory>
													</entry>
												</entries>
											</copy>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>stop_all</id>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>it</id>

			<build>

				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

</project>